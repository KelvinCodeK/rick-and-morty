{"version":3,"sources":["images/portal.png","images/rick.jpg","home.js","logo.svg","episode.js","character.js","index.js"],"names":["Home","props","useEffect","resetAll","className","to","src","portal","rick","Episode","style","width","items","episodes","onSearch","handleOnSearch","onHover","handleOnHover","onSelect","handleOnSelect","onFocus","handleOnFocus","autoFocus","formatResult","fuseOptions","keys","threshold","resultStringKeyName","onClick","epiFetch","episode","name","air_date","Character","characters","charFetch","character","gender","species","origin","map","x","finalLink","replace","image","Index","useState","setEpisodes","setCharacters","setEpisode","setCharacter","inputString","setInputString","fetch","then","response","ok","Error","json","data","results","push","id","catch","err","console","log","string","result","item","path","element","document","querySelector","value","alert","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c752a94b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/portal.2b93de54.png\";","export default __webpack_public_path__ + \"static/media/rick.12522fa6.jpg\";","import './home.css';\nimport {Link} from \"react-router-dom\";\nimport portal from './images/portal.png';\nimport rick from './images/rick.jpg';\nimport { useEffect } from 'react';\n\nfunction Home(props) {\n\n  useEffect( () => {\n    props.resetAll();\n  }, []);\n  \n  return (\n    <main className=\"home\">\n      <header className=\"homeHeader\">\n        <h1>Rick and Morty X Mobiel.nl</h1>\n      </header>\n      <section className=\"buttons\">\n      <Link to=\"/episodes\">\n          <button className=\"button\">\n            episodes\n          </button>\n      </Link>\n      <Link to=\"/characters\">\n          <button className=\"button\">\n            characters\n          </button>\n      </Link>\n      </section>\n      <section className=\"animations\">\n        <div className=\"portalRick\">\n          <img className=\"portal\" src={portal}/>\n          <img className=\"rick\" src={rick}/>\n        </div>\n      </section>  \n    </main>\n  );\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './episode.css';\r\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\r\n\r\nfunction Episode(props) {\r\n\r\nreturn (\r\n  <main className=\"zoekPagina\">\r\n      <header className=\"episodeHeader\">\r\n        <h1>Rick and Morty X Mobiel.nl</h1>\r\n      </header>\r\n      <section className=\"zoekEpisode\">\r\n        <h2>Find your favorite episode, based on its name or episode code</h2>\r\n        <div className=\"zoeken\">\r\n        <div style={{ width: 'calc(120px + 25vmin)' }}>\r\n          <ReactSearchAutocomplete\r\n            items={props.episodes}\r\n            onSearch={props.handleOnSearch}\r\n            onHover={props.handleOnHover}\r\n            onSelect={props.handleOnSelect}\r\n            onFocus={props.handleOnFocus}\r\n            autoFocus\r\n            formatResult={props.formatResult}\r\n            fuseOptions={{ keys: [\"name\", \"episode\"], threshold: 0.1}}\r\n            resultStringKeyName=\"name\"\r\n          />\r\n        </div>\r\n        <button onClick={props.epiFetch} className=\"button\">\r\n              search\r\n            </button>\r\n        </div>\r\n      </section>\r\n      <section className=\"resultaatEpisodes\">\r\n        {props.episode[0] ? \r\n          (\r\n            <div>\r\n            <h3>{props.episode[0].name}</h3>   \r\n            <p>Episode code: {props.episode[0].episode}</p>\r\n            <p>This episode was first aired on: {props.episode[0].air_date}</p>\r\n            </div>\r\n          ) : null}\r\n      </section>     \r\n  </main>\r\n);\r\n}\r\n\r\nexport default Episode;","import logo from './logo.svg';\r\nimport './character.css';\r\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\r\n\r\nfunction Character(props) {\r\n\r\n    return (\r\n      <main className=\"zoekPagina\">\r\n        <header className=\"bannerCharacter\">\r\n            <h1>Rick and Morty X Mobiel.nl</h1>\r\n        </header>\r\n        <section className=\"zoekEpisode\">\r\n          <h2>Find your favorite character</h2>\r\n          <div className=\"zoeken\">\r\n            <div style={{ width: 'calc(120px + 25vmin)' }}>\r\n              <ReactSearchAutocomplete\r\n                items={props.characters}\r\n                onSearch={props.handleOnSearch}\r\n                onHover={props.handleOnHover}\r\n                onSelect={props.handleOnSelect}\r\n                onFocus={props.handleOnFocus}\r\n                autoFocus\r\n                formatResult={props.formatResult}\r\n                fuseOptions={{ keys: [\"name\", \"episode\"], threshold: 0.1}}\r\n                resultStringKeyName=\"name\"\r\n              />\r\n            </div>\r\n            <button onClick={props.charFetch} className=\"button\">\r\n            search\r\n            </button>\r\n          </div>\r\n          </section>\r\n          <section className=\"resultaat\">\r\n          {props.character[0] ? \r\n           (\r\n            <div className=\"resultaatRij\">\r\n            <div>\r\n            <h3>{props.character[0].name}</h3>   \r\n            <ul>\r\n              <li>gender: {props.character[0].gender}</li>\r\n              <li>species: {props.character[0].species}</li>\r\n              <li>origin: {props.character[0].origin}</li>\r\n            </ul>\r\n              <p>{`${props.character[0].name} starred in these episodes:`}</p>\r\n              <ul className=\"charEpisodes\">\r\n              {props.character[0].episode.map((x) => {\r\n                let link = x;\r\n                let regexLink = x.replace('https://rickandmortyapi.com/api/', '');\r\n                let finalLink = regexLink.replace('/', ' ');\r\n                              return (\r\n                                <li key={`${finalLink + 3}`}>\r\n                                  { finalLink}\r\n                                </li>)})}\r\n             </ul>\r\n              </div>\r\n              <img className=\"charImage\" src={props.character[0].image} />\r\n              </div>\r\n              )\r\n            : null}\r\n          </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Character;","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './home';\nimport Episode from './episode';\nimport Character from './character';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nexport default function Index() {\n\n  const [episodes, setEpisodes] = useState([]);\n  const [characters, setCharacters] = useState([]);\n  const [episode, setEpisode] = useState([]);\n  const [character, setCharacter] = useState([]);\n  const [inputString, setInputString] = useState('');\n\n  useEffect(() => {\n    // episode autocomplete fetch\n    fetch('https://rickandmortyapi.com/api/episode')\n    .then(response => {\n      if (!response.ok) {\n        throw Error('De server ligt er momenteel uit');}\n        return response.json();\n    })\n    .then(data => {\n      const results = data.results;\n      let items = [];\n      let x;\n      for(x in results) {\n      items.push({id: results[x].id, name: results[x].name, episode: results[x].episode })}\n      setEpisodes([...items]);})\n      .catch((err) => console.log(err))\n    \n    // character autocomplete fetch\n    fetch('https://rickandmortyapi.com/api/character')\n      .then(response => {\n        if (!response.ok) {\n          throw Error('De server ligt er momenteel uit');}\n          return response.json();\n      })\n      .then(data => {\n        const results = data.results;\n        let items = [];\n        let x;\n        for(x in results) {\n          items.push({id: results[x].id, name: results[x].name})\n        }\n        setCharacters([...items]);})\n        .catch((err) => console.log(err))}, []);\n\n    // reset all\n    const resetAll = () => {\n      setEpisode([]);\n      setCharacter([]);\n      setInputString('');\n    }\n\n    // autocomplete handlers\n    const handleOnSearch = (string, results) => {\n      setInputString(string);\n      console.log(string, results);\n    }\n  \n    const handleOnHover = (result) => {\n      console.log(result);\n    }\n  \n    const handleOnSelect = (item) => {\n      setInputString(item.name);\n      console.log(item);\n    }\n  \n    const handleOnFocus = () => {\n      console.log('Focused');\n    }\n  \n    const formatResult = (item) => {\n      return item\n    }\n\n    //charfetch\n    const charFetch = () => {\n      if(!inputString) {\n        alert('Make sure to fill in the field first');\n      }\n      else {\n        fetch(`https://rickandmortyapi.com/api/character/?name=${inputString}`)\n        .then(response => {\n          if (!response.ok) {\n            throw Error('De server ligt er momenteel uit');}\n            return response.json();\n        })\n        .then(data => {\n          const results = data.results;\n          let items = [];\n          items.push({id: results[0].id, name: results[0].name, species: results[0].species, gender: results[0].gender, origin: results[0].origin.name, image: results[0].image, episode: results[0].episode})\n          setCharacter([...items]);\n            document.querySelector('input').value = '';\n            console.log(items)})\n          .catch((err) => console.log(err))\n        }\n      }\n\n    //epifetch\n    const epiFetch = () => {\n      if(!inputString) {\n        alert('Make sure to fill in the field first');\n      }\n      else {\n        fetch(`https://rickandmortyapi.com/api/episode/?name=${inputString}`)\n        .then(response => {\n          if (!response.ok) {\n            throw Error('De server ligt er momenteel uit');}\n            return response.json();\n        })\n        .then(data => {\n          const results = data.results;\n          let items = [];\n            items.push({id: results[0].id, name: results[0].name, episode: results[0].episode, air_date: results[0].air_date, characters: results[0].characters });\n            setEpisode([...items]);\n            document.querySelector('input').value = '';\n          console.log(items)})\n          .catch((err) => console.log(err))\n      }\n    }\n\n  return (\n    <Router>\n      <div>\n      <Routes>\n      <Route \n      path=\"/episodes\" \n      element={<Episode \n      epiFetch={epiFetch}\n      episodes={episodes} \n      episode={episode}\n      handleOnSearch={handleOnSearch} \n      handleOnHover={handleOnHover} \n      handleOnSelect={handleOnSelect} \n      handleOnFocus={handleOnFocus} \n      formatResult={formatResult}/>} />\n      <Route \n      path=\"/characters\" \n      element={<Character \n      charFetch={charFetch}\n      characters={characters} \n      character={character}\n      handleOnSearch={handleOnSearch} \n      handleOnHover={handleOnHover} \n      handleOnSelect={handleOnSelect} \n      handleOnFocus={handleOnFocus} \n      formatResult={formatResult}/>} />\n      <Route exact path=\"/\" element={\n      <Home \n      resetAll={resetAll}\n      />} />\n      </Routes>\n      </div>\n    </Router>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Index />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}